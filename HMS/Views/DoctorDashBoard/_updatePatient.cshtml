@model HMS.ViewModels.PatientHealthDetailViewModel

@using (Html.BeginForm("Update", "DoctorDashBoard", FormMethod.Post))
{
    @*@Html.AntiForgeryToken()*@

    <div class="modal-header">
        <h5 class="card-title">Update Patient Details</h5>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.PatientId)
        @Html.HiddenFor(model => model.Ph_Id)

        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>

    <div class="modal-body">

        <div class="form-row">
            <div class="col-4">
                <div class="form-group">
                    <label for="Name">@Html.DisplayNameFor(m => m.Height)</label>
                    @Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "form-control" } })
                    <small id="Patient_Name" class="form-text text-muted">  @Html.ValidationMessageFor(model => model.Height, "", new { @class = "text-danger" })</small>
                </div>
            </div>

            <div class="col-4">
                <div class="form-group">
                    <label for="Name">@Html.DisplayNameFor(m => m.Weight)</label>
                    @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                    <small id="Patient_Name" class="form-text text-muted">  @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })</small>
                </div>
            </div>

            <div class="col-4">
                <div class="form-group">
                    <label for="Specialist">@Html.DisplayNameFor(m => m.HeartRate)</label>
                    @Html.EditorFor(model => model.HeartRate, new { htmlAttributes = new { @class = "form-control" } })
                    <small id="Patient_Phone" class="form-text text-muted">   @Html.ValidationMessageFor(model => model.HeartRate, "", new { @class = "text-danger" })</small>
                </div>
            </div>


        </div>

        <div class="form-row">

            <div class="col-4">
                <div class="form-group">
                    <label for="Specialist">@Html.DisplayNameFor(m => m.BodyTemperature)</label>
                    @Html.EditorFor(model => model.BodyTemperature, new { htmlAttributes = new { @class = "form-control" } })
                    <small id="Patient_Age" class="form-text text-muted">@Html.ValidationMessageFor(model => model.BodyTemperature, "", new { @class = "text-danger" })</small>
                </div>
            </div>

            <div class="col-4">
                <div class="form-group">
                    <label for="Specialist"> @Html.DisplayNameFor(m => m.Glucose)</label>
                    @Html.EditorFor(model => model.Glucose, new { htmlAttributes = new { @class = "form-control" } })
                    <small id="Gender_ID" class="form-text text-muted"> @Html.ValidationMessageFor(model => model.Glucose, "", new { @class = "text-danger" })</small>
                </div>
            </div>

            <div class="col-4">
                <div class="form-group">
                    <label for="Specialist"> @Html.DisplayNameFor(m => m.Allergies)</label>
                    @Html.EditorFor(model => model.Allergies, new { htmlAttributes = new { @class = "form-control" } })
                    <small id="BG_ID" class="form-text text-muted"> @Html.ValidationMessageFor(model => model.Allergies, "", new { @class = "text-danger" })</small>
                </div>
            </div>

        </div>


        <div class="form-row">
            <div class="col-4">
                <div class="form-group">
                    <label for="Specialist">@Html.DisplayNameFor(m => m.Diseases)</label>
                    @Html.EditorFor(model => model.Diseases, new { htmlAttributes = new { @class = "form-control" } })

                    <small id="Patient_Email" class="form-text text-muted">  @Html.ValidationMessageFor(model => model.Diseases, "", new { @class = "text-danger" })</small>
                </div>
            </div>
        </div>

    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        <button type="submit" class="btn btn-primary">@(Model.Ph_Id == 0 ? "Save" : "Update")</button>
    </div>

}

@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/Scripts/MyScripts/AjaxSubmit.js")